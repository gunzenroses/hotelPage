mixin donut-chart({ excellent = 0, good = 0, satisfied = 0, dissapointed = 0 })
  - 
    var { 
      donutMarks, 
      donutColors } = require("Components/donut-chart/donut-chart.json");
  - 
    var totalData = 
      parseFloat(excellent) +
      parseFloat(good) +
      parseFloat(satisfied) + 
      parseFloat(dissapointed)
  - var dissapointed = dissapointed / totalData * 100;
  - var satisfied = satisfied / totalData * 100;
  - var good = good / totalData * 100;
  - var excellent = excellent / totalData * 100;
  - var donutData = { dissapointed, satisfied, good, excellent } 
  
  - var counter = 1;
  - var dashOffsetValue = parseFloat(25 - 0.5);
  - var prevArraySumm = 0;

  figure.donut-chart
    figcaption.donut-chart__caption
      ul.donut-chart__key-list(aria-hidden = "true" role = "presentation")
        each val, key in donutMarks
          li.donut-chart__key-item
            span(class = `donut-chart__marker donut-chart__marker_${ key }`)
            != val
    .donut-chart__content
      svg.donut-chart__img(
        width = "100%" 
        height = "100%" 
        viewbox = "0 0 33 33" 
        aria-labelledby = "impression-title" 
        role = "img")
        defs
          each donutColor in donutColors 
            each val, key in donutColor
              - var { start, end } = val
              - 
                var gradientInfo = key === "excellent" | key === "satisfied"
                  ? "rotate(90)"
                  : ""
              lineargradient(id= `gradient_${ 
                key }` gradientTransform = gradientInfo)
                stop(stop-color = start offset = "0%")
                stop(stop-color = end offset = "100%")
        title#impression-title Впечатлeния от номера

        circle.donut-chart__ring(
          cx = "50%" cy = "50%" 
          r = "15.91549430918954"
          role = "presentation" 
          )
        each percent, mark in donutData
          if (percent>2)
            - var dashValue = parseInt(percent - 1);
            - var dashLeft = 100 - dashValue;
            circle.donut-chart__segment(
              cx = "50%" cy = "50%" 
              r = "15.91549430918954"
              stroke = `url(#gradient_${ mark })`
              stroke-dasharray = `${ dashValue } ${ dashLeft }` 
              stroke-dashoffset = dashOffsetValue
              aria-labelledby = `donut-chart-segment-${ counter }-title`)
            title(
              id = `donut-chart-segment-${ counter++ }-title` 
              data-some = prevArraySumm)!= mark
            - dashOffsetValue -= percent;

      .donut-chart__text
        p.donut-chart__number!= totalData
        p.donut-chart__label голосов
